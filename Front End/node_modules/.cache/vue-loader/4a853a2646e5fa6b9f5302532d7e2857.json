{"remainingRequest":"/Users/leonliang/Developer/Operation_KnowledgeGraph/Front End/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/leonliang/Developer/Operation_KnowledgeGraph/Front End/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/leonliang/Developer/Operation_KnowledgeGraph/Front End/src/App.vue","mtime":1539670968665},{"path":"/Users/leonliang/Developer/Operation_KnowledgeGraph/Front End/node_modules/cache-loader/dist/cjs.js","mtime":1539668827796},{"path":"/Users/leonliang/Developer/Operation_KnowledgeGraph/Front End/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/leonliang/Developer/Operation_KnowledgeGraph/Front End/node_modules/cache-loader/dist/cjs.js","mtime":1539668827796},{"path":"/Users/leonliang/Developer/Operation_KnowledgeGraph/Front End/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getAll, addOne, getLabel} from './assets/API'\nimport {showData2} from \"./assets/dataV\";\nimport $ from 'jquery'\n\n\nexport default {\n  data() {\n    return {\n      nodes:[],\n      links:[],\n      activeName: 'Information',\n      keyword: '',\n      newResource: {},\n      newADR: {},\n      newFailure: {},\n      newTestCase: {},\n      whichResourceToShow: 'All',\n    }\n  },\n  methods: {\n      showAll: function () {\n          var self = this;\n          $.ajax({\n              type: 'get',\n              async: true,\n              crossDomain: true,\n              // url: 'http://localhost:8088/bbs/api/getAll',\n              url: '/bbs/api/getAll',\n              success: function (res) {\n                  self.nodes = res.nodes;\n                  self.links = res.links;\n                  showData2(self.nodes, self.links);\n                  document.getElementById('loading').style.display = 'none';\n              },\n              error: function (res) {\n                  console.log('Something went wrong!')\n              }\n          })\n      },\n      display: function () {\n          document.getElementById('loading').style.display = 'inline';\n          if (this.whichResourceToShow === 'All')\n              this.showAll();\n          else {\n              var labelName;\n              switch (this.whichResourceToShow) {\n                  case 'Resource':\n                      labelName = 'ResourceNode';\n                      break;\n                  case 'Failure':\n                      labelName = 'Failure_Node';\n                      break;\n                  case 'ADR':\n                      labelName = 'ADR_Node';\n                      break;\n                  case 'Test Case':\n                      labelName = 'TestCase_Node';\n                      break;\n              }\n              var self = this;\n              $.ajax({\n                  type: 'post',\n                  async: true,\n                  crossDomain: true,\n                  // url: 'http://localhost:8088/bbs/api/getLabel',\n                  url: '/bbs/api/getLabel',\n                  beforeSend: function (xhr) {\n                      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n                  },\n                  data: {label:labelName},\n                  success: function (res) {\n                      self.nodes = res.nodes;\n                      self.links = res.links;\n                      showData2(self.nodes, self.links);\n                      document.getElementById('loading').style.display = 'none';\n                  },\n                  error: function (res) {\n                      console.log('A Something wrong!')\n                  }\n              })\n          }\n      },\n      add: function (type) {\n          var inputData;\n          switch (type) {\n              case 1:\n                  this.newResource.label = \"ResourceNode\";\n                  var array = this.newResource.relations.split(\", \");\n                  for(var i=0; i<array.length; i++)\n                      array[i] = parseInt(array[i]);\n                  this.newResource.relations = array;\n                  inputData = this.newResource;\n                  break;\n              case 2:\n                  this.newFailure.label = \"Failure_Node\";\n                  this.newFailure.layer = \"0\";\n                  var array = this.newFailure.relations.split(\", \");\n                  for(var i=0; i<array.length; i++)\n                      array[i] = parseInt(array[i]);\n                  this.newFailure.relations = array;\n                  inputData = this.newFailure;\n                  break;\n              case 3:\n                  this.newADR.label = \"ADR_Node\";\n                  this.newADR.layer = \"0\";\n                  this.newADR.type = \"ADR;\"\n                  var array = this.newADR.relations.split(\", \");\n                  for(var i=0; i<array.length; i++)\n                      array[i] = parseInt(array[i]);\n                  this.newADR.relations = array;\n                  inputData = this.newADR;\n                  break;\n              case 4:\n                  this.newTestCase.label = \"TestCase_Node\";\n                  this.newTestCase.layer = \"0\";\n                  this.newTestCase.type = \"Test Case;\"\n                  var array = this.newTestCase.relations.split(\", \");\n                  for(var i=0; i<array.length; i++)\n                      array[i] = parseInt(array[i]);\n                  this.newTestCase.relations = array;\n                  inputData = this.newTestCase;\n                  break;\n          }\n          console.log(inputData);\n          var result = addOne(inputData);\n          alert(result.state);\n          this.display();\n      },\n      search: function () {\n          var self = this;\n          document.getElementById('loading').style.display = 'inline';\n          $.ajax({\n              type: 'post',\n              async: true,\n              crossDomain: true,\n              url: 'http://localhost:8088/bbs/api/getNeighbors',\n              beforeSend: function (xhr) {\n                  xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n              },\n              data: {name:self.keyword},\n              success: function (res) {\n                  self.links = res.links\n                  self.nodes = res.nodes\n                  showData2(self.nodes, self.links)\n                  document.getElementById('loading').style.display = 'none'\n              },\n              error: function (res) {\n                  console.log('A Something wrong!')\n              }\n          })\n      }\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <el-container class=\"whole\">\n      <el-container style=\"width:80%;\">\n        <el-header height=\"20%\">\n          <el-row>\n            <el-col :span=\"10\">\n              <el-input placeholder=\"Please keywords to search for specific resource\" prefix-icon=\"el-icon-search\" v-model=\"keyword\">\n              </el-input>\n            </el-col>\n            <el-col :span=\"4\">\n              <el-button plain icon=\"el-icon-search\" v-on:click.native=\"search()\">Search</el-button>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col :span=\"12\">\n              <el-radio-group v-model=\"whichResourceToShow\" @change=\"display\">\n                <el-radio-button v-for=\"item in ['All', 'Resource', 'Failure', 'ADR', 'Test Case']\" :label=\"item\" :key=\"item\"></el-radio-button>\n              </el-radio-group>\n            </el-col>\n            <el-col :offset=\"2\" :span=\"9\">\n              <label style=\"color:white; display: block;\"><input style=\"width:240px; margin-top: 20pt;\" type=\"range\" min=\"0\" max=\"0.2\" step=\"any\" value=\"0.1\"> Link Strength</label>\n            </el-col>\n          </el-row>\n        </el-header>\n        <el-main>\n          <el-row style=\"margin-bottom: 10px\">\n            <el-tag id=\"id\">id: </el-tag>\n            <el-tag id=\"name\">name: </el-tag>\n            <el-tag id=\"type\">type: </el-tag>\n            <el-tag id=\"layer\">layer: </el-tag>\n          </el-row>\n          <el-row>\n            <img id=\"loading\" src=\"./assets/loading.gif\" />\n            <svg id=\"graph\" width=\"1000\" height=\"500\"></svg>\n          </el-row>\n          <el-row>\n            <img src=\"./assets/Rectangle.png\" />\n          </el-row>\n        </el-main>\n      </el-container>\n      <el-aside width=\"25%\">\n        <el-collapse v-model=\"activeName\" accordion>\n          <el-collapse-item title=\"Information show\" name=\"Information\">\n            <el-row style=\"margin-bottom:20px\">\n              <el-col :offset=\"2\" :span=\"20\">\n                <el-form label-position=\"top\" style=\"text-align:left;height:50%\">\n                  <el-form-item label=\"Id\">\n                      <el-input id=\"this_id\" disabled></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Name\">\n                    <el-input id=\"this_name\" disabled></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Type\">\n                    <el-input id=\"this_type\" disabled></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Layer\">\n                    <el-input id=\"this_layer\" disabled></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Performance\">\n                    <el-input type=\"textarea\" id=\"this_performance\" disabled></el-input>\n                  </el-form-item>\n                </el-form>\n              </el-col>\n            </el-row>\n          </el-collapse-item>\n          <el-collapse-item title=\"Resource\" name=\"Resource\">\n            <el-row>\n              <el-col :offset=\"2\" :span=\"20\">\n                <el-form label-position=\"top\" style=\"text-align:left\">\n                  <el-form-item label=\"Resourece Name\">\n                    <el-input v-model=\"newResource.name\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Resourece Type\">\n                    <el-input v-model=\"newResource.type\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Resourece Layer\">\n                    <el-input v-model=\"newResource.layer\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Resourece Performance\">\n                    <el-input v-model=\"newResource.performance\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Resourece Relations\">\n                    <el-input v-model=\"newResource.relations\"></el-input>\n                  </el-form-item>\n                  <el-button type=\"primary\" size=\"mini\" v-on:click.native=\"add(1)\">提交</el-button>\n                </el-form>\n              </el-col>\n            </el-row>\n          </el-collapse-item>\n          <el-collapse-item title=\"Failure\" name=\"Failure\">\n            <el-row>\n              <el-col :offset=\"2\" :span=\"20\">\n                <el-form label-position=\"top\" style=\"text-align:left\">\n                  <el-form-item label=\"Failure Name\">\n                    <el-input v-model=\"newFailure.name\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Failure Type\">\n                    <el-select v-model=\"newFailure.type\" placeholder=\"Choose failure type\" size=\"medium\" style=\"display:inline\">\n                      <el-option v-for=\"item in ['Fail slow', 'Fail partial', 'Fail stop', 'Fail transient', 'Fail as well as corruption']\" :key=\"item\" :value=\"item\">\n                      </el-option>\n                    </el-select>\n                  </el-form-item>\n                  <el-form-item label=\"Failure Description\">\n                    <el-input type=\"textarea\" v-model=\"newFailure.performance\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Failure Relations\">\n                    <el-input v-model=\"newFailure.relations\"></el-input>\n                  </el-form-item>\n                  <el-button type=\"primary\" size=\"mini\" v-on:click.native=\"add(2)\">提交</el-button>\n                </el-form>\n              </el-col>\n            </el-row>\n          </el-collapse-item>\n          <el-collapse-item title=\"ADR\" name=\"ADR\">\n            <el-row>\n              <el-col :offset=\"2\" :span=\"20\">\n                <el-form label-position=\"top\" style=\"text-align:left\">\n                  <el-form-item label=\"ADR Name\">\n                    <el-input v-model=\"newADR.name\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"ADR Link\">\n                    <el-input v-model=\"newADR.performance\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"ADR Relations\">\n                    <el-input v-model=\"newADR.relations\"></el-input>\n                  </el-form-item>\n                  <el-button type=\"primary\" size=\"mini\" v-on:click.native=\"add(3)\">提交</el-button>\n                </el-form>\n              </el-col>\n            </el-row>\n          </el-collapse-item>\n          <el-collapse-item title=\"Test Case\" name=\"Test Case\">\n            <el-row>\n              <el-col :offset=\"2\" :span=\"20\">\n                <el-form label-position=\"top\" style=\"text-align:left\">\n                  <el-form-item label=\"Test Case Name\">\n                    <el-input v-model=\"newTestCase.name\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Test Case Link\">\n                    <el-input v-model=\"newTestCase.performance\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"Test Case Relations\">\n                    <el-input v-model=\"newTestCase.relations\"></el-input>\n                  </el-form-item>\n                  <el-button type=\"primary\" size=\"mini\" v-on:click.native=\"add(4)\">提交</el-button>\n                </el-form>\n              </el-col>\n            </el-row>\n          </el-collapse-item>\n        </el-collapse>\n      </el-aside>\n    </el-container>\n  </div>\n</template>\n\n<script>\n  import {getAll, addOne, getLabel} from './assets/API'\n  import {showData2} from \"./assets/dataV\";\n  import $ from 'jquery'\n\n\n  export default {\n    data() {\n      return {\n        nodes:[],\n        links:[],\n        activeName: 'Information',\n        keyword: '',\n        newResource: {},\n        newADR: {},\n        newFailure: {},\n        newTestCase: {},\n        whichResourceToShow: 'All',\n      }\n    },\n    methods: {\n        showAll: function () {\n            var self = this;\n            $.ajax({\n                type: 'get',\n                async: true,\n                crossDomain: true,\n                // url: 'http://localhost:8088/bbs/api/getAll',\n                url: '/bbs/api/getAll',\n                success: function (res) {\n                    self.nodes = res.nodes;\n                    self.links = res.links;\n                    showData2(self.nodes, self.links);\n                    document.getElementById('loading').style.display = 'none';\n                },\n                error: function (res) {\n                    console.log('Something went wrong!')\n                }\n            })\n        },\n        display: function () {\n            document.getElementById('loading').style.display = 'inline';\n            if (this.whichResourceToShow === 'All')\n                this.showAll();\n            else {\n                var labelName;\n                switch (this.whichResourceToShow) {\n                    case 'Resource':\n                        labelName = 'ResourceNode';\n                        break;\n                    case 'Failure':\n                        labelName = 'Failure_Node';\n                        break;\n                    case 'ADR':\n                        labelName = 'ADR_Node';\n                        break;\n                    case 'Test Case':\n                        labelName = 'TestCase_Node';\n                        break;\n                }\n                var self = this;\n                $.ajax({\n                    type: 'post',\n                    async: true,\n                    crossDomain: true,\n                    // url: 'http://localhost:8088/bbs/api/getLabel',\n                    url: '/bbs/api/getLabel',\n                    beforeSend: function (xhr) {\n                        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n                    },\n                    data: {label:labelName},\n                    success: function (res) {\n                        self.nodes = res.nodes;\n                        self.links = res.links;\n                        showData2(self.nodes, self.links);\n                        document.getElementById('loading').style.display = 'none';\n                    },\n                    error: function (res) {\n                        console.log('A Something wrong!')\n                    }\n                })\n            }\n        },\n        add: function (type) {\n            var inputData;\n            switch (type) {\n                case 1:\n                    this.newResource.label = \"ResourceNode\";\n                    var array = this.newResource.relations.split(\", \");\n                    for(var i=0; i<array.length; i++)\n                        array[i] = parseInt(array[i]);\n                    this.newResource.relations = array;\n                    inputData = this.newResource;\n                    break;\n                case 2:\n                    this.newFailure.label = \"Failure_Node\";\n                    this.newFailure.layer = \"0\";\n                    var array = this.newFailure.relations.split(\", \");\n                    for(var i=0; i<array.length; i++)\n                        array[i] = parseInt(array[i]);\n                    this.newFailure.relations = array;\n                    inputData = this.newFailure;\n                    break;\n                case 3:\n                    this.newADR.label = \"ADR_Node\";\n                    this.newADR.layer = \"0\";\n                    this.newADR.type = \"ADR;\"\n                    var array = this.newADR.relations.split(\", \");\n                    for(var i=0; i<array.length; i++)\n                        array[i] = parseInt(array[i]);\n                    this.newADR.relations = array;\n                    inputData = this.newADR;\n                    break;\n                case 4:\n                    this.newTestCase.label = \"TestCase_Node\";\n                    this.newTestCase.layer = \"0\";\n                    this.newTestCase.type = \"Test Case;\"\n                    var array = this.newTestCase.relations.split(\", \");\n                    for(var i=0; i<array.length; i++)\n                        array[i] = parseInt(array[i]);\n                    this.newTestCase.relations = array;\n                    inputData = this.newTestCase;\n                    break;\n            }\n            console.log(inputData);\n            var result = addOne(inputData);\n            alert(result.state);\n            this.display();\n        },\n        search: function () {\n            var self = this;\n            document.getElementById('loading').style.display = 'inline';\n            $.ajax({\n                type: 'post',\n                async: true,\n                crossDomain: true,\n                url: 'http://localhost:8088/bbs/api/getNeighbors',\n                beforeSend: function (xhr) {\n                    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n                },\n                data: {name:self.keyword},\n                success: function (res) {\n                    self.links = res.links\n                    self.nodes = res.nodes\n                    showData2(self.nodes, self.links)\n                    document.getElementById('loading').style.display = 'none'\n                },\n                error: function (res) {\n                    console.log('A Something wrong!')\n                }\n            })\n        }\n    }\n  }\n</script>\n\n<style>\n  #app {\n    font-family: Helvetica, sans-serif;\n    text-align: center;\n  }\n  .whole {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n  .el-header {\n    background-color: #232931;\n    color: #616161;\n    text-align: center;\n    line-height: 60px;\n  }\n  .el-aside {\n    background-color: #393e46;\n    color: #616161;\n    text-align: center;\n    line-height: 200px;\n  }\n  .el-main {\n    background-color: #eeeeee;\n    color: #616161;\n    text-align: center;\n    /*line-height: 160px;*/\n    position: relative;\n  }\n  .el-icon-arrow-right:before {\n    content: \"\\E62B\";\n  }\n  #graph{\n    border: 1px solid blue;\n    max-width: 100%;\n    scroll-behavior: auto;\n  }\n  #loading{\n    position: absolute;\n    left: 35%;\n    top: 100px;\n    display: none;\n  }\n</style>\n"]}]}